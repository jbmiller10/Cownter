name: lint-test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd cattle_tracker
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        cd cattle_tracker
        ruff check .

  test-python:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_cattle_tracker
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        cd cattle_tracker
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: test_cattle_tracker
        DB_USER: postgres
        DB_PASSWORD: postgres
        SECRET_KEY: test-secret-key
      run: |
        cd cattle_tracker
        python manage.py migrate
        pytest

  lint-typescript:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Lint TypeScript
      run: |
        cd frontend
        npm run lint

  build-docker:
    runs-on: ubuntu-latest
    needs: [lint-python, test-python, lint-typescript]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Django image
      uses: docker/build-push-action@v5
      with:
        context: ./cattle_tracker
        push: false
        tags: cattle-tracker-web:latest
    
    - name: Build Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        target: build
        push: false
        tags: cattle-tracker-frontend:latest